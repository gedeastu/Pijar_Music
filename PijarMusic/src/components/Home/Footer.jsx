import React from "react";
import "./Footer.css";
import { useState, useEffect } from "react";
import { FooterGetPosts } from "../../../api/api";
const Footer = ({ Copyright }) => {
  const [dataFooter, setDataFooter] = useState([]);
  const fetchData = async () => {
    try {
      const data = await FooterGetPosts();
      setDataFooter(data);
    } catch (error) {
      console.error("Error fetching data : ", error);
    }
  };
  useEffect(() => {
    fetchData();
  }, []);
  return (
    <>
      <div className="bg-[#FAFAFA] md:pt-10 md:pb-20 px-10">
        <div
          className={
            "grid grid-cols-2 grid-rows-2  gap-x-10 gap-y-16 py-10 px-2 place-content-center w-full h-full md:grid-rows-1 md:py-3 md:place-items-center md:grid-cols-4"
          }
        >
          <div
            id="brand"
            className="flex items-center flex-col gap-5 md:gap-10 md:items-start"
          >
            <div className="flex flex-col items-center gap-5 md:items-start">
              <div
                id="logo"
                className="flex flex-row items-center gap-3 md:mb-0"
              >
                <svg
                  width="36"
                  height="48"
                  viewBox="0 0 36 48"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M23.7678 41.0164H12.2801C11.3627 41.0164 10.1952 40.9054 9.42376 40.0621C8.67319 39.2411 8.69404 38.2202 8.71489 37.5323V35.5572C3.46094 31.829 0 25.349 0 19.1797C0 13.3433 2.46018 7.88409 6.73424 4.22245C11.0083 0.560813 16.6166 -0.81507 22.0999 0.472045C27.3122 1.69259 31.8156 5.39862 34.1507 10.3918C38.6749 20.0896 34.3175 30.5863 27.3539 35.5794V37.2438C27.3747 37.8874 27.3956 39.0635 26.5408 39.9956C25.8944 40.6613 24.9771 41.0164 23.7678 41.0164ZM12.2592 37.6876C12.0716 37.6876 11.9256 37.6654 11.8214 37.6654C11.8214 37.6432 11.8214 37.6432 11.8005 37.6432V34.6474C11.8005 34.0704 11.5295 33.5378 11.05 33.2271C7.08867 30.675 3.08566 25.349 3.08566 19.1797C3.08566 14.3419 5.10801 9.83697 8.65235 6.7967C12.1967 3.75643 16.846 2.62465 21.3911 3.68985C25.686 4.68848 29.3971 7.72875 31.3152 11.8342C35.214 20.1561 31.1276 29.2326 24.9562 33.2049C24.4976 33.4934 24.2057 34.0482 24.2057 34.6252V37.4213V37.6432C24.1223 37.6654 23.9763 37.6876 23.7678 37.6876H12.2592Z"
                    fill="#FF6002"
                  />
                  <path
                    d="M11.8214 37.6654C11.9256 37.6654 12.0716 37.6876 12.2592 37.6876H23.7678C23.9763 37.6876 24.1223 37.6654 24.2057 37.6432V37.4213V34.6252C24.2057 34.0482 24.4976 33.4934 24.9562 33.2049C31.1276 29.2326 35.214 20.1561 31.3152 11.8342C29.3971 7.72875 25.686 4.68848 21.3911 3.68985C16.846 2.62465 12.1967 3.75643 8.65235 6.7967C5.10801 9.83697 3.08566 14.3419 3.08566 19.1797C3.08566 25.349 7.08867 30.675 11.05 33.2271C11.5295 33.5378 11.8005 34.0704 11.8005 34.6474V37.6432C11.8214 37.6432 11.8214 37.6432 11.8214 37.6654Z"
                    fill="#FF6002"
                  />
                  <path
                    d="M25.2903 47.6745C25.1443 47.6745 24.9984 47.6523 24.8524 47.6079C20.3491 46.232 15.6163 46.232 11.1128 47.6079C10.2789 47.852 9.42407 47.3416 9.17388 46.454C8.92369 45.5663 9.42407 44.6564 10.258 44.3901C15.3036 42.8589 20.6618 42.8589 25.7073 44.3901C26.5412 44.6342 27.0207 45.5663 26.7914 46.454C26.6038 47.2085 25.9783 47.6745 25.2903 47.6745Z"
                    fill="#FF6002"
                  />
                  <path
                    d="M25.0315 23.6017V12.4435C25.0308 12.2911 24.996 12.1408 24.9298 12.0039C24.8636 11.8669 24.7676 11.7467 24.649 11.6522C24.5321 11.5569 24.3954 11.4892 24.2491 11.4541C24.1028 11.419 23.9506 11.4174 23.8036 11.4494L14.7456 13.4781C14.522 13.529 14.3223 13.6552 14.1795 13.836C14.0368 14.0167 13.9595 14.2412 13.9606 14.4722V22.9322C13.2735 22.6052 12.4998 22.5117 11.7555 22.6655C11.0112 22.8193 10.3364 23.2122 9.83247 23.7853C9.3285 24.3584 9.02248 25.0807 8.96032 25.8439C8.89817 26.6071 9.08322 27.3701 9.48772 28.0183C9.89222 28.6665 10.4944 29.1651 11.2038 29.4392C11.9133 29.7133 12.6918 29.7481 13.4225 29.5385C14.1533 29.3289 14.7969 28.8861 15.2568 28.2766C15.7168 27.6671 15.9682 26.9237 15.9735 26.1579C15.9839 25.9822 15.9839 25.8061 15.9735 25.6304V15.2837L23.0186 13.7114V20.9034C22.3311 20.5763 21.5569 20.4828 20.8122 20.637C20.0676 20.7911 19.3926 21.1846 18.8888 21.7584C18.3849 22.3321 18.0794 23.0552 18.018 23.8189C17.9566 24.5826 18.1427 25.3457 18.5483 25.9938C18.954 26.6418 19.5573 27.1397 20.2676 27.4126C20.9779 27.6856 21.757 27.719 22.4877 27.5076C23.2184 27.2963 23.8614 26.8518 24.3201 26.2408C24.7788 25.6297 25.0284 24.8852 25.0315 24.119C25.041 23.9467 25.041 23.774 25.0315 23.6017Z"
                    fill="white"
                  />
                </svg>
                <h1 className="font-outfit font-bold text-xl text-black">
                  Pijar Music
                </h1>
              </div>
              <div id="desc" className="w-56 text-center md:text-left">
                <p className="text-black font-outfit">
                  Whatever it is that you care about, there will be a charity
                  working on it. Charities help in lots of different ways
                </p>
              </div>
            </div>
            <div id="sosmed" className="flex flex-row items-center gap-5">
              <svg
                width="25"
                height="20"
                viewBox="0 0 25 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M22.2 4.98436C22.2153 5.2031 22.2153 5.42188 22.2153 5.64062C22.2153 12.3125 17.2661 20 8.22032 20C5.4335 20 2.84467 19.1718 0.666992 17.7344C1.06295 17.7812 1.44362 17.7969 1.85481 17.7969C4.15427 17.7969 6.27106 17 7.96143 15.6406C5.79898 15.5938 3.98679 14.1406 3.36241 12.1406C3.667 12.1875 3.97155 12.2187 4.29138 12.2187C4.73299 12.2187 5.17465 12.1562 5.58579 12.0469C3.33199 11.5781 1.64157 9.54687 1.64157 7.09374V7.03126C2.29637 7.40627 3.05786 7.64064 3.86491 7.67185C2.54003 6.76558 1.67204 5.21873 1.67204 3.46871C1.67204 2.53123 1.91565 1.67186 2.34208 0.921852C4.76341 3.98435 8.40304 5.98432 12.4842 6.2031C12.4081 5.8281 12.3624 5.43752 12.3624 5.04688C12.3624 2.2656 14.5553 0 17.2812 0C18.6974 0 19.9766 0.609373 20.8751 1.59375C21.9868 1.37501 23.0528 0.953114 23.997 0.375003C23.6314 1.5469 22.8548 2.53128 21.8345 3.15624C22.8244 3.04692 23.7838 2.7656 24.667 2.37502C23.9971 3.37498 23.1594 4.26557 22.2 4.98436Z"
                  fill="#FF6002"
                />
              </svg>
              <svg
                width="21"
                height="20"
                viewBox="0 0 21 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.3479 11.25L15.9407 7.63047H12.2347V5.28164C12.2347 4.29141 12.7524 3.32617 14.4122 3.32617H16.097V0.244531C16.097 0.244531 14.5681 0 13.1063 0C10.0543 0 8.05945 1.73359 8.05945 4.87187V7.63047H4.66696V11.25H8.05945V20H12.2347V11.25H15.3479Z"
                  fill="#FF6002"
                />
              </svg>
              <svg
                width="24"
                height="20"
                viewBox="0 0 24 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_1_523)">
                  <path
                    d="M22.8601 4.50346C22.5994 3.51804 21.8313 2.74196 20.8561 2.47858C19.0885 2 12.0004 2 12.0004 2C12.0004 2 4.91236 2 3.14467 2.47858C2.16945 2.742 1.40138 3.51804 1.1407 4.50346C0.667053 6.28958 0.667053 10.0162 0.667053 10.0162C0.667053 10.0162 0.667053 13.7428 1.1407 15.5289C1.40138 16.5143 2.16945 17.258 3.14467 17.5214C4.91236 18 12.0004 18 12.0004 18C12.0004 18 19.0884 18 20.8561 17.5214C21.8313 17.258 22.5994 16.5143 22.8601 15.5289C23.3337 13.7428 23.3337 10.0162 23.3337 10.0162C23.3337 10.0162 23.3337 6.28958 22.8601 4.50346ZM9.68219 13.3996V6.63271L15.6064 10.0163L9.68219 13.3996Z"
                    fill="#FF6002"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_1_523">
                    <rect
                      width="22.6667"
                      height="20"
                      fill="white"
                      transform="translate(0.666992)"
                    />
                  </clipPath>
                </defs>
              </svg>
              <svg
                width="21"
                height="20"
                viewBox="0 0 21 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_1_519)">
                  <path
                    d="M10.6692 4.87225C7.83152 4.87225 5.54262 7.16166 5.54262 10C5.54262 12.8383 7.83152 15.1277 10.6692 15.1277C13.5069 15.1277 15.7958 12.8383 15.7958 10C15.7958 7.16166 13.5069 4.87225 10.6692 4.87225ZM10.6692 13.3337C8.83543 13.3337 7.33626 11.8387 7.33626 10C7.33626 8.16133 8.83096 6.6663 10.6692 6.6663C12.5075 6.6663 14.0022 8.16133 14.0022 10C14.0022 11.8387 12.503 13.3337 10.6692 13.3337ZM17.2013 4.6625C17.2013 5.32746 16.6659 5.85853 16.0055 5.85853C15.3407 5.85853 14.8098 5.32299 14.8098 4.6625C14.8098 4.00201 15.3452 3.46647 16.0055 3.46647C16.6659 3.46647 17.2013 4.00201 17.2013 4.6625ZM20.5967 5.87638C20.5209 4.27424 20.155 2.85507 18.9815 1.68582C17.8126 0.516568 16.3937 0.150619 14.7919 0.070289C13.1411 -0.0234297 8.19293 -0.0234297 6.54206 0.070289C4.94474 0.146156 3.52589 0.512105 2.35244 1.68136C1.17898 2.85061 0.817578 4.26978 0.737265 5.87192C0.643568 7.52315 0.643568 12.4724 0.737265 14.1236C0.813116 15.7258 1.17898 17.1449 2.35244 18.3142C3.52589 19.4834 4.94028 19.8494 6.54206 19.9297C8.19293 20.0234 13.1411 20.0234 14.7919 19.9297C16.3937 19.8538 17.8126 19.4879 18.9815 18.3142C20.1505 17.1449 20.5164 15.7258 20.5967 14.1236C20.6904 12.4724 20.6904 7.52761 20.5967 5.87638ZM18.464 15.8953C18.116 16.7701 17.4422 17.4439 16.5633 17.7965C15.247 18.3186 12.1238 18.1981 10.6692 18.1981C9.21468 18.1981 6.08696 18.3142 4.77519 17.7965C3.90068 17.4484 3.22695 16.7745 2.87447 15.8953C2.35244 14.5788 2.4729 11.4549 2.4729 10C2.4729 8.54513 2.3569 5.41671 2.87447 4.10465C3.22249 3.22995 3.89622 2.55606 4.77519 2.2035C6.09142 1.68136 9.21468 1.80185 10.6692 1.80185C12.1238 1.80185 15.2515 1.68582 16.5633 2.2035C17.4378 2.5516 18.1115 3.22548 18.464 4.10465C18.986 5.42118 18.8655 8.54513 18.8655 10C18.8655 11.4549 18.986 14.5833 18.464 15.8953Z"
                    fill="#FF6002"
                  />
                </g>
                <defs>
                  <clipPath id="clip0_1_519">
                    <rect
                      width="20"
                      height="20"
                      fill="white"
                      transform="translate(0.666992)"
                    />
                  </clipPath>
                </defs>
              </svg>
            </div>
          </div>
          {dataFooter.length > 0 ? (
            dataFooter.map((data) => (
              <div key={data.id} className="md:h-[13.5rem]">
                {data.titleMenu && (
                  <div
                    id="Menu"
                    className="text-black order-2 font-outfit text-center h-full relative md:flex md:flex-col md:text-left md:gap-5"
                  >
                    <h1 className="font-bold mb-5  md:mb-0">
                      {data.titleMenu}
                    </h1>
                    <div className="justify-between flex flex-col gap-3">
                      {data.dataMenu.map((item) => (
                        <div key={item.id}>
                          <p>{item.destination}</p>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {data.titleAbout && (
                  <div
                    id="AboutUs"
                    className="text-black text-center font-outfit relative overflow-hidden h-full md:text-left md:flex md:flex-col md:gap-5"
                  >
                    <h1 className="font-bold mb-5  md:mb-0">
                      {data.titleAbout}
                    </h1>
                    <div className="justify-between flex flex-col gap-3">
                      {data.dataAbout.map((item) => (
                        <div key={item.id}>
                          <a href="">{item.destination}</a>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {data.titleContact && (
                  <div
                    id="contactUs"
                    className="text-black order-3 text-left font-outfit relative h-full md:flex md:flex-col md:gap-5"
                  >
                    <h1 className="text-black font-bold font-outfit mb-5  md:mb-0">
                      {data.titleContact}
                    </h1>
                    <div className="justify-between flex flex-col gap-3">
                      {data.dataContact.map((item) => (
                        <div
                          key={item.id}
                          className="font-outfit flex flex-row items-center gap-4"
                        >
                          <span
                            dangerouslySetInnerHTML={{ __html: item.icon }}
                          />
                          <div>
                            <p className="text-black font-bold md:text-left">
                              {item.title}
                            </p>
                            <p className="text-[#6F7775]">{item.content}</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </div>
            ))
          ) : (
            <p>the Data server is down</p>
          )}
        </div>
      </div>
      {Copyright}
    </>
  );
};

export default Footer;
